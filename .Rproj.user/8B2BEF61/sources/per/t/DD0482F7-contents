library(tabulizer)
library(plyr)
library(dplyr)
library(miniUI)
library(stringr)
library(lubridate)

#Some important Variables to define the overall list of sessions to process
session <- c("FP2")#,"FP2","FP3","FP4","Q1","Q2","WUP")
event   <- c("ITA")#,"ARG","AME","SPA","FRA","ITA","CAT","NED","GER","AUT","CZE","GBR","RSM")
j <- rep(sprintf(session), each = length(event)) 
i <- sprintf(event)
urls <- paste("http://resources.motogp.com/files/results/2021/", i, "/MotoGP/"
              , j,"/Analysis.pdf", sep = "")
ses <- paste(i, j, sep = "-")

AA <- c(154.328125, 53.921875, 731.85, 314.978125)
AB <- c(154.328125, 317.953125, 731.85, 576.7781250)
ZA <- c(40.90625, 56.896875, 731.85, 314.978125)
ZB <- c(40.90625, 314.978125, 731.85, 576.778125)

#Get The Area Function
GetArea <- function(x) {
  y <- vector('list',x)
  for (i in seq(x)) {
    if (i == 1) { y[[i]] <- AA}
    else if (i == 2) { y[[i]] <- AB}
    else if (i %% 2 != 0) {y[[i]] <- ZA}
    else {y[[i]] <- ZB}
  }
  return(y)
}


for ( i in seq(urls)) {
  p <- get_n_pages(urls[i])
  pages <- as.numeric(as.integer(seq(1,p+.5,.5)))
  area <- GetArea(2*p)
  
  ts <- extract_tables(urls[i], pages = pages, guess = FALSE, area = area)
  
  for (i in seq(length(ts)) ) { 
    ts[[i]] <- ts[[i]][,which(!apply(ts[[i]],2,FUN = function(x){all(x == "")}))]
  }
}

