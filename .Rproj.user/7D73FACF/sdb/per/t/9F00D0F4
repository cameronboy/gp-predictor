{
    "collab_server" : "",
    "contents" : "library(tabulizer)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(lubridate)\nlibrary(data.table)  #Used for Cross Joining our\nlibrary(RCurl)\nlibrary(zoo)\n\n\nsession <- c(\"FP1\",\"FP2\", \"FP3\", \"FP4\", \"Q1\", \"Q2\", \"WUP\", \"RAC\")\nevent <- c(\"QAT\",\"ARG\",\"AME\", \"SPA\", \"FRA\", \"ITA\", \"CAT\", \"NED\", \"GER\", \"AUT\", \"CZE\", \"GBR\", \"RSM\",\"ARA\",\"MAL\",\"JPN\",\"VAL\")\ntype <- c(\"Analysis\")\nx <- as.matrix(CJ(event, session, type))\ndata = data_frame()\n\nspeed_lap_combo = \"\\\\d{1,3}\\\\.\\\\d{3}\\\\.\\\\d{3}\"\np_xp <- \"P\"\nl_xp <- \"^\\\\d{1,2}'\\\\d{2}\\\\.\\\\d{3}\"\nr_xp <- \"^\\\\d{1,2}\\\\s\"\nb_xp <- paste(l_xp, r_xp, sep =  \"|\")\nsector_s <- \"\\\\d{1,2}\\\\.\\\\d{3}\"\nsector_m <- \"\\\\d{1,2}'\\\\d{2}\\\\.\\\\d{3}\"\nb_sect <- paste(sector_s, sector_m, sep = \"|\")\nspeed <- \"\\\\d{3}\\\\.\\\\d{1}\"\n\n##Loop through the sessions  \nfor ( i in seq(nrow(x))) {\n \nurl <- paste(\"http://resources.motogp.com/files/results/2016/\", x[i,1], \"/MotoGP/\"\n               , x[i,2],\"/\",x[i,3],\".pdf\", sep = \"\") \n\nif(url.exists(url)){\ndat <- extract_text(url)\n  \ndat <- dat %>% \n  gsub(\"\\n\",\"\",.) %>% \n  gsub(\"\\\\*\",\"\",.) %>% \n  str_split(., \"\\r\") %>% \n  unlist() %>% \n  as_data_frame() %>%\n  mutate(info_line     = grepl(b_xp, .$value),\n         laps      = if_else(grepl(l_xp, .$value), .$value, NULL),\n         rider_v1  = if_else(grepl(r_xp, .$value), .$value, NULL)) %>% \n  filter(info_line == TRUE) %>% \n  mutate(Rider = na.locf(rider_v1)) %>% \n  select(-1:-2, -rider_v1) %>% \n  filter(!is.na(laps),!grepl(\"PIT|Fastest Lap\", laps)) %>% \n  mutate(url = url,\n         Session = x[i,2],\n         Event = x[i,1])\n\ndata <- dat %>% \n  bind_rows(data)\n    \n\n\n\n#Print out Progress\n  print(paste(i,\" of \",nrow(x),sep = \"\"))\n  } else {\n  #if no pdf exists, then print to consol & move to next iteration\n  print(paste(i,\" of \",nrow(x),\" - !Exist\",sep = \"\"))\n  next\n  }\n}\n\ndata <- cbind(data, str_split(data$laps, \" \",simplify = TRUE))\n\ndata <- data %>% \n  rename( \"V1\" = `1`,\"V2\" = `2`,\"V3\" = `3`,\"V4\" = `4`,\"V5\" = `5`,\"V6\" = `6`) \n  \n  data %>% mutate_if(is.factor, as.character) -> data\n\n  data_2[is.na(data_2)] <- \"\"\n\ndata_2 <- data %>% \n  as_data_frame() %>% \n  mutate( Lap  = as.numeric(substr(V1, str_locate(V1, \"\\\\d?\\\\d'\\\\d{2}\\\\.\\\\d{3}\")[,2] + 1, 100)),\n          PitInd = if_else(grepl(p_xp, laps),\"P\",NULL),\n          Time = ms(str_extract_all(V1,\"^\\\\d?\\\\d{1,2}'\\\\d{2}\\\\.\\\\d{3}\", simplify = TRUE)),\n          Time_s = period_to_seconds(Time),\n          V_T1 = str_extract_all(V2,b_sect, simplify = TRUE),\n          T1   = as.numeric(if_else(grepl(sector_m, V2), as.character(period_to_seconds(ms(V_T1))), V_T1)),\n          V_T2 = str_extract_all(V3, b_sect, simplify = TRUE),\n          T2   = as.numeric(if_else(grepl(sector_m, V3), as.character(period_to_seconds(ms(V_T2))), V_T2)),\n          V_T3 = str_extract_all(V4, b_sect, simplify = TRUE),\n          T3   = as.numeric(if_else(grepl(sector_m, V4), as.character(period_to_seconds(ms(V_T3))), V_T3)),\n          V_T4 = if_else(grepl(speed_lap_combo, V5), str_extract(V5, paste(sector_s, \"$\", sep = \"\"))\n                ,if_else(grepl(sector_s, V5), V5\n                ,if_else(grepl(sector_s, V6), V6, \"0\"))),\n                \n          # V_T4 = if_else(grepl(speed_lap_combo, V5), str_extract_all(V5, paste(sector_s,\"$\",sep = \"\"), simplify = TRUE), V5),\n          # VV_T4   = if_else(grepl(b_sect, V6), V6, str_extract_all(V5, paste(b_sect, \"$\", sep = \"\"), simplify = TRUE)),\n          # T4 = if_else(grepl(sector_s, VV_T4), as.numeric(VV_T4), period_to_seconds(ms(VV_T4))),\n          V_ss = str_locate(laps, speed_lap_combo)[,1],\n          speed = if_else(grepl(b_sect, V6), str_extract_all(V5, speed, simplify = TRUE), substr(laps, V_ss, V_ss + 4)))\n\n\ndata_2 <- data_2 %>% \n  mutate(sector_sum = (T1 + T2 + T3 + T4),\n         check = sector_sum - as.numeric(Time_s))\n\nwrite.csv(data_2, \"Test_CSV.csv\")\n\n\ndata %>%\n  mutate(test = grepl(\".P.\", laps))\n",
    "created" : 1476329186802.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2915283169",
    "id" : "9F00D0F4",
    "lastKnownWriteTime" : 1482376312,
    "last_content_update" : 1482376312217,
    "path" : "~/MotoGP Stats/Analysis_Load_Good.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}